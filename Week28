Question #1

```.py

string = input("Input a string: ")
digit = 0 # define a variable called digit to store the given digits
letter = 0 # define a variable called letter to store the given letters
for i in string: # use for loop to repeat the process until every letter and digit is checked
    if i.isdigit(): # check each position of the given string to see if its digit or not
        digit = digit + 1 # if its digit then store it in digit value 
    elif i.isalpha(): # if its not a digit then check if its alpha which is a letter 
        letter = letter + 1 # if yes then store it in the letter value 
    else: # if its not both of them 
        pass # then pass and do nothing 
    
# you print both letter and digit 
print("Letters", letter)
print("Digits", digit)

```

Question #2

```.py

num = int(input("Input a number: ")) # get an input from the user
for i in range (1, num+1): # use a for loop to repeat the process from 1 to given num
    d = {i:i*i} # define a variable in a dictionary
    print(d) # print d to get the values that are stored

```

Question #3

```.py

seq = input("Enter words that are separated by comma: ") # get an input from the user
words = [word for word in seq.split(",")] # store the separated word into words
print(",".join(sorted(list(set(words))))) # print it by rearranging the words by its alphabetic order

```

Question #4 

```.py

class cap:
    def __init__(self):
        self.string = input("Enter a string: ")

    def capitalization(self):
        print(self.string.upper())


convert = cap()
convert.capitalization()

```

Question #5

```.py

age = int(input("Enter a dog's age: ")) # get an integer number

# you can have an if statement that shows if the age is less than zero then exit 
if age <= 2: # if the dog is two year then just print 21 or if its 1 then print 10.5
    dog_year = age * 10.5
else: # if not then subtract 2 from the age and then multiply by 4 and then add 21 
    dog_year = 21 + ((age - 2)*4)

print("The dog's age in dog's years is: ", dog_year)

```

Question #6

```.py



```
